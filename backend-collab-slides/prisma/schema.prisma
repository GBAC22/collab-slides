generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String          @id @default(uuid())
  email      String          @unique
  password   String
  name       String
  planId     String?
  plan       Plan?           @relation(fields: [planId], references: [id])
  projects   Project[]
  members    ProjectMember[]
  exportLogs ExportLog[]     // RelaciÃ³n inversa de ExportLog
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model Plan {
  id        String   @id @default(uuid())
  name      String   @unique
  price     Float
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Project {
  id        String          @id @default(uuid())
  name      String
  userId    String
  pptxUrl   String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  user      User            @relation(fields: [userId], references: [id])
  slides    Slide[]
  members   ProjectMember[]
}

model ProjectMember {
  id        String   @id @default(uuid())
  userId    String
  projectId String
  role      String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
}

model Slide {
  id          String   @id @default(uuid())
  title       String
  content     String
  bulletPoints Json?    // ðŸ’¡ Nuevo: array de bullet points como JSON
  slideType   String    // ðŸ’¡ Nuevo: "title", "content", "bullets", etc.
  imagePrompt String?   // ðŸ’¡ Nuevo: prompt usado para la imagen
  imageUrl    String?
  data        Json?     // ðŸ’¡ Nuevo: datos adicionales (ejemplo: stats, comparaciones)
  projectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project     Project  @relation(fields: [projectId], references: [id])
}

model ExportLog {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}
